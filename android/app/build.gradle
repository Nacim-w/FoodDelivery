import java.util.Properties
import java.io.FileInputStream
plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {
    namespace = "com.bramasquare.legy"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "29.0.13113456"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.bramasquare.legy"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode 1 // placeholder
        versionName "1.0.2" // placeholder
    }
    println("Loaded storeFile: " + keystoreProperties["storeFile"])
    println("Loaded keyAlias: " + keystoreProperties["keyAlias"])
    println("Loaded keyPassword: " + keystoreProperties["keyPassword"])
    println("Loaded storePassword: " + keystoreProperties["storePassword"])

    println("CI environment: " + System.getenv()["CI"])
    println("CM_KEYSTORE: " + System.getenv()["CM_KEYSTORE"])
    println("CM_KEYSTORE_PASSWORD: " + System.getenv()["CM_KEYSTORE_PASSWORD"])
    println("CM_KEY_ALIAS: " + System.getenv()["CM_KEY_ALIAS"])
    println("CM_KEY_PASSWORD: " + System.getenv()["CM_KEY_PASSWORD"])
    signingConfigs {
    release {
        if (System.getenv("CI") == "true") {
            storeFile file("/tmp/keystore.jks") // âœ… fixed path
            storePassword System.getenv("CM_KEYSTORE_PASSWORD")
            keyAlias System.getenv("CM_KEY_ALIAS")
            keyPassword System.getenv("CM_KEY_PASSWORD")
        } else {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
}


    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source = "../.."
}
